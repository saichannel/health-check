name: Build & Deploy Mule App to CloudHub 2.0

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Target environment: dev / uat / prod"
        required: true
        default: "dev"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Set Environment Variables
        id: set-env
        run: |
          echo "user=${{ secrets[format('USER.{0}', github.event.inputs.environment)] }}" >> $GITHUB_OUTPUT
          echo "pass=${{ secrets[format('PASS.{0}', github.event.inputs.environment)] }}" >> $GITHUB_OUTPUT
          echo "env=${{ secrets[format('ENV.{0}', github.event.inputs.environment)] }}" >> $GITHUB_OUTPUT
          echo "app_name=${{ secrets[format('APP_NAME.{0}', github.event.inputs.environment)] }}" >> $GITHUB_OUTPUT
          echo "group_id=${{ secrets[format('GROUP_ID.{0}', github.event.inputs.environment)] }}" >> $GITHUB_OUTPUT
          echo "asset_version=${{ secrets[format('ASSET_VERSION.{0}', github.event.inputs.environment)] }}" >> $GITHUB_OUTPUT
          echo "org_id=${{ secrets[format('ANYPOINT_ORG_ID.{0}', github.event.inputs.environment)] }}" >> $GITHUB_OUTPUT

      - name: Build Mule App
        run: mvn clean package -DmuleDeploy

      - name: Publish to Exchange
        run: |
          mvn deploy \
            -Dusername=${{ steps.set-env.outputs.user }} \
            -Dpassword=${{ steps.set-env.outputs.pass }} \
            -DorgId=${{ steps.set-env.outputs.org_id }} \
            -DgroupId=${{ steps.set-env.outputs.group_id }} \
            -DassetVersion=${{ steps.set-env.outputs.asset_version }}

      - name: Deploy to CloudHub 2.0
        run: |
          mvn deploy -DmuleDeploy \
            -Duser=${{ steps.set-env.outputs.user }} \
            -Dpass=${{ steps.set-env.outputs.pass }} \
            -Denv=${{ steps.set-env.outputs.env }} \
            -DappName=${{ steps.set-env.outputs.app_name }} \
            -DorgId=${{ steps.set-env.outputs.org_id }}

      - name: Confirm Deployment
        run: echo "Deployment to ${{ github.event.inputs.environment }} completed."
