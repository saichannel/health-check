name: MuleSoft CI/CD Pipeline

on:
  push:
    branches:
      - main
      - 'hotfix/**'
  workflow_call:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: 17

      - name: Publish to Exchange
        run: |
          mvn deploy --settings .maven/settings.xml -DskipMunitTests \
          -Danypoint.username="${{ secrets.USER }}" \
          -Danypoint.password="${{ secrets.PASS }}" 


  deploydev:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Deploy to dev
        run: |
          mvn deploy --settings .maven/settings.xml -DskipMunitTests -DmuleDeploy \
          -Danypoint.username="${{ secrets.USER }}" \
          -Danypoint.password="${{ secrets.PASS }}" \
          -Danypoint.businessGroup="${{ secrets.ANYPOINT_ORG_ID }}" \
          -Denv="${{ secrets.ENV }}" \
          -Dappname="${{ secrets.APP_NAME }}" \
          -Danypoint.platform.client_id="${{ secrets.ENV_CLIENT_ID }}" \
          -Danypoint.platform.client_secret="${{ secrets.ENV_CLIENT_SECRET }}" \
          -Dmule.env="${{ secrets.MULE_ENV }}" \
          -Dkey="${{ secrets.KEY }}"


  deployuat:
    needs: deploydev
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: uat
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Deploy to uat
        run: |
          mvn deploy --settings .maven/settings.xml -DskipMunitTests -DmuleDeploy \
          -Danypoint.username="${{ secrets.USER }}" \
          -Danypoint.password="${{ secrets.PASS }}" \
          -Danypoint.businessGroup="${{ secrets.ANYPOINT_ORG_ID }}" \
          -Denv="${{ secrets.ENV }}" \
          -Dappname="${{ secrets.APP_NAME }}" \
          -Danypoint.platform.client_id="${{ secrets.ENV_CLIENT_ID }}" \
          -Danypoint.platform.client_secret="${{ secrets.ENV_CLIENT_SECRET }}" \
          -Dmule.env="${{ secrets.MULE_ENV }}" \
          -Dkey="${{ secrets.KEY }}"


  deployprod:
    needs: [build] # for hotfix, or [deployuat] for main
    if: |
      github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/hotfix/')
    runs-on: ubuntu-latest
    environment:
      name: prod
      # Optional: enable this in GitHub UI for manual approvals
      # url: https://anyprod-env-url.example.com
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Deploy to prod
        run: |
          mvn deploy --settings .maven/settings.xml -DskipMunitTests -DmuleDeploy \
          -Danypoint.username="${{ secrets.USER }}" \
          -Danypoint.password="${{ secrets.PASS }}" \
          -Danypoint.businessGroup="${{ secrets.ANYPOINT_ORG_ID }}" \
          -Denv="${{ secrets.ENV }}" \
          -Dappname="${{ secrets.APP_NAME }}" \
          -Danypoint.platform.client_id="${{ secrets.ENV_CLIENT_ID }}" \
          -Danypoint.platform.client_secret="${{ secrets.ENV_CLIENT_SECRET }}" \
          -Dmule.env="${{ secrets.MULE_ENV }}" \
          -Dkey="${{ secrets.KEY }}"
